{"version":3,"file":"static/js/660.ab226f5f.chunk.js","mappings":"uNAQMA,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAiEd,UA9DqB,WACjB,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACfC,KAAK,GACLT,MAAO,GACPE,SAAU,IAEdJ,iBAAkBA,EACdY,SAAU,SAACC,GAEXP,GAASQ,EAAAA,EAAAA,IAAcD,GAC1B,IAED,OACA,SAAC,KAAD,WACA,SAAC,KAAD,WACI,kBAAMD,SAAUJ,EAAOO,aAAvB,WACI,SAAC,KAAD,iCACA,SAAC,IAAD,CACIC,WAAS,EAETC,GAAG,OACHC,MAAM,OACNP,KAAK,OACLQ,MAAOX,EAAOK,OAAOF,KACrBS,aAAa,MACbC,OAAO,QACPC,SAAUd,EAAOe,gBACrB,SAAC,IAAD,CACIP,WAAS,EAEbC,GAAG,QACHN,KAAK,QACLO,MAAM,QACNC,MAAOX,EAAOK,OAAOX,MACrBoB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQvB,OAASwB,QAAQlB,EAAOmB,OAAOzB,OAC7C0B,WAAYpB,EAAOiB,QAAQvB,OAASM,EAAOmB,OAAOzB,MACtDmB,OAAO,WAEX,SAAC,IAAD,CACIL,WAAS,EACbC,GAAG,WACHN,KAAK,WACLO,MAAM,WACNW,KAAK,WACLV,MAAOX,EAAOK,OAAOT,SACrBkB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQrB,UAAYsB,QAAQlB,EAAOmB,OAAOvB,UAChDwB,WAAYpB,EAAOiB,QAAQrB,UAAYI,EAAOmB,OAAOvB,SAErDiB,OAAO,WAEf,SAAC,KAAD,WACI,SAAC,KAAD,CAAQQ,KAAK,SAAb,4BAMf,C,+JC9EYC,EAAOC,EAAAA,GAAAA,IAAH,iGAKJC,EAAMD,EAAAA,GAAAA,IAAH,yNASHE,EAAOF,EAAAA,GAAAA,KAAH,oFAKJG,EAASH,EAAAA,GAAAA,OAAH,yK","sources":["components/UserRegister/UserRegister.jsx","components/UserRegister/UserRegister.styled.jsx"],"sourcesContent":["import { registredUser } from 'redux/AuthOperation/authOperation';\nimport { DIV,WRAP,SPAN,Button } from './UserRegister.styled';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport TextField from '@mui/material/TextField';\n\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst UserRegister = () => {\n    const dispatch = useDispatch()\n    const formik = useFormik({\n        initialValues: {\n        name:'',\n        email: '',\n        password: '',\n    },\n    validationSchema: validationSchema,\n        onSubmit: (values) => {\n            // console.log(\"ðŸš€  values\", values);\n        dispatch(registredUser(values))\n    },\n  });\n    return (\n    <WRAP>\n    <DIV>\n        <form onSubmit={formik.handleSubmit}>\n            <SPAN>Registration form</SPAN> \n            <TextField\n                fullWidth\n                // helperText=\"Please enter your name\"\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                value={formik.values.name}\n                autoComplete='off'\n                margin=\"dense\"\n                onChange={formik.handleChange} />\n            <TextField\n                fullWidth\n                    //   helperText=\"Please enter your email\"\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n                    helperText={formik.touched.email && formik.errors.email}\n                margin=\"dense\" \n                        />\n            <TextField\n                fullWidth\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                    //   helperText=\"Please enter your password\"\n                    margin=\"dense\"\n                        />\n            <SPAN>\n                <Button type=\"submit\">Submit</Button>\n            </SPAN>\n        </form>\n    </DIV>\n    </WRAP>\n  );\n}\nexport default UserRegister;\n\n// const UserRegister = () => {\n//     const dispatch = useDispatch()\n//     const [loading, setLoading] = useState(true);\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const inputAddedName = evt => {\n//         const { name, value } = evt.target;\n//         switch (name) {\n//             case 'name':\n//                 setName(value);\n//                 break;\n//             case 'email':\n//                 setEmail(value);\n//                 break;\n//             case 'password':\n//                 setLoading(false);\n//                 setPassword(value);\n//                 break;\n//             default:\n//                 break;\n//         }\n//     };\n\n//     const onSubmitForm = (evt) => {\n//         evt.preventDefault();\n//         dispatch(registredUser({ name: name, email: email, password: password }))\n//         setLoading(true);\n//         // console.log({ name: name, email: email, password: password });\n//         // resetForm();\n//     };\n\n//     // const resetForm = () => {\n//     //     setEmail('');setName('');setPassword('');\n//     // };\n//     return (\n//         <WRAP>\n//             <DIV>\n//                 <FORM >\n//                 <SPAN>Registration form</SPAN> \n//                 <TextField\n//                 helperText=\"Please enter your name\"\n//                 id=\"demo-helper-text-misaligned\"\n//                 label=\"Name\"\n//                 name=\"name\"\n//                 value={name}\n//                 autoComplete='off'\n//                 margin=\"dense\"\n//                 onChange={inputAddedName}\n//             />\n//             <TextField\n//             helperText=\"Please enter your email\"\n//             id=\"demo-helper-text-misaligneds\"\n//             label=\"Email\"\n//             name=\"email\"\n//                         value={email}\n//                         title=\"May contain only letters\"\n//             autoComplete='off'\n//             margin=\"dense\"\n//             onChange={inputAddedName}\n//                 />\n//             <TextField\n//             id=\"outlined-password-input\"\n//             label=\"Password\"\n//             helperText=\"Please enter your password\"\n//             type=\"password\"\n//             name=\"password\"\n//             value={password}\n//             autoComplete='off'\n//             margin=\"dense\"\n//             onChange={inputAddedName}\n//                     />\n//         <SPAN>\n//             <LoadingButton \n//             sx={{ width: 100 }} \n//             onClick={onSubmitForm} \n//             disabled={loading}\n//             loadingIndicator=\"Loadingâ€¦\"\n//             variant=\"outlined\"\n//         >\n//         <span>Submit</span>\n//         </LoadingButton></SPAN>  \n//             </FORM>\n//         </DIV>\n//     </WRAP>\n//     )\n// }\n\n\n","import styled from \"styled-components\";\n\nexport const WRAP = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 80px;\n`\nexport const DIV = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 30%;\n    border-radius: 4px;\n    padding: 16px;\n        box-shadow: rgb(9 9 9 / 75%) 0px 0px 12px 0px;\n`\nexport const SPAN = styled.span`\ndisplay: flex;\njustify-content: center;\nmargin:10px 0px;\n`\nexport const Button = styled.button`\nfont-size:18px;\nfont-weight:700;\npadding: 10px 20px;\ncolor:white;\nbackground-color:#1a62da;\nborder-radius:4px;\nborder:none;\nwidth: 100px;\n`"],"names":["validationSchema","yup","email","required","password","min","dispatch","useDispatch","formik","useFormik","initialValues","name","onSubmit","values","registredUser","handleSubmit","fullWidth","id","label","value","autoComplete","margin","onChange","handleChange","error","touched","Boolean","errors","helperText","type","WRAP","styled","DIV","SPAN","Button"],"sourceRoot":""}